@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;500;700&display=swap');

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
	box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
	margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
body {
	height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
	line-height: 1.5;
	-webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
	display: block;
	max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
	font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
	overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
	isolation: isolate;
}

:root {
	/* Colors */
	--darkNavy: rgb(26, 42, 51);
	--darkNavyHover: #10212a;
	--semiDarkNavy: rgb(31, 54, 65);
	--silver: rgb(168, 191, 201);
	--silverHover: rgb(219, 232, 237);
	--lightBlue: rgb(49, 195, 189);
	--lightBlueHover: rgb(101, 233, 228);
	--lightYellow: rgb(242, 177, 55);
	--lightYellowHover: rgb(255, 200, 96);
}

body {
	font-family: 'Outfit', sans-serif;
	display: flex;
	flex-flow: column;
	justify-content: center;
	align-items: center;
	height: 100%;
	min-height: 100vh;
	background-color: var(--darkNavy);
	color: var(--silver);
}

header h1 {
	display: flex;
	flex-flow: row;
	justify-content: center;
}

h1 svg {
	transform: scale(50%);
}

a {
	text-decoration: none;
	color: var(--darkNavy);
}

main {
	display: flex;
	flex-flow: column;
	align-items: center;
	justify-content: center;
	height: 100%;
	width: 100%;
	min-width: 350px;
	padding: 1rem;
	gap: 2rem;
}

/* Button Styling */
button {
	border-radius: 1rem;
	background-color: var(--lightYellowHover);
	padding: 1rem;
	border: none;
	border-bottom: 0.5rem solid var(--lightYellow);
	font-weight: bold;
	width: 100%;
}

button:hover {
	cursor: pointer;
	background-color: var(--lightYellow);
	border-bottom-color: var(--lightYellowHover);
}

.blue {
	background-color: var(--lightBlueHover);
	border-bottom: 0.5rem solid var(--lightBlue);
}

.blue:hover {
	background-color: var(--lightBlue);
	border-bottom-color: var(--lightBlueHover);
}

ul {
	list-style: none;
}

/* Player Selection */
.container {
	background-color: var(--semiDarkNavy);
	display: flex;
	flex-flow: column;
	justify-content: center;
	align-items: center;
	border-radius: 1rem;
	border-bottom: 0.5rem solid var(--darkNavyHover);
	padding: 1.5rem;
	width: 100%;
	gap: 1rem;
}

.container p {
	font-weight: 700;
}

.container p:last-child {
	color: var(--silver);
	font-weight: normal;
	font-size: 1rem;
	opacity: 0.75;
}

.container form {
	position: relative;
	width: 100%;
	display: flex;
}

.selection input[type='checkbox'] {
	display: none;
}

.selection label {
	content: 'X';
	padding: 2.5rem 0;
	background-color: var(--darkNavy);
	border-radius: 0.75rem;
	width: 100%;
	flex: 1;
	cursor: pointer;
	display: inline-block;
	position: relative;
	transition: all ease-in-out 0.3s;
}

.selection label::after {
	content: 'O';
	right: 2.5%;
	top: 0.5rem;
	height: 80%;
	width: 50%;
	display: flex;
	cursor: pointer;
	font-weight: 700;
	font-size: 3rem;
	position: absolute;
	text-align: center;
	align-items: center;
	color: var(--darkNavy);
	border-radius: 0.75rem;
	justify-content: center;
	background-color: var(--silver);
	transition: all ease-in-out 0.3s;
}

.selection input[type='checkbox']:checked ~ label {
	background-color: var(--silver);
}

.selection input[type='checkbox']:checked ~ label::after {
	background-color: var(--darkNavy);
	color: var(--silver);
	content: 'X';
	transform: translateX(-90%);
}

.game_button {
	display: flex;
	flex-flow: column;
	justify-content: center;
	align-items: center;
	width: 100%;
	margin: auto;
	gap: 1rem;
}

@media (min-width: 601px) {
	/* body {
		padding: 0;
	} */
	main {
		width: 30vw;
	}
}
